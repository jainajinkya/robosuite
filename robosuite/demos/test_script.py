from robosuite.controllers import load_controller_config
from robosuite.utils.input_utils import *
from robosuite.controllers.test_ind_joint import TestIndependentJointContoller

import plotly.graph_objects as go
from plotly.subplots import make_subplots


TEST_ACTIONS = [
    [0.250, 0.000, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.250, 0.000, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.250, 0.000, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.250, 0.000, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.250, 0.000, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.250, 0.000, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.250, 0.000, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.250, 0.000, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.250, 0.000, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.250, 0.000, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.250, 0.000, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.250, 0.000, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.250, 0.000, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.250, 0.000, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.250, 0.000, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.250, 0.000, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.250, 0.000, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.250, 0.000, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.250, 0.000, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.250, 0.000, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.250, 0.000, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.250, 0.000, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.250, 0.000, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.250, 0.000, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.250, 0.000, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.250, 0.000, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.250, 0.000, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.250, 0.000, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.250, 0.000, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.250, 0.000, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.250, 0.000, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.250, 0.000, 0.000, 0.000, 0.000, 0.000, -1.000],
    [-0.250, 0.000, 0.000, 0.000, 0.000, 0.000, -1.000],
    [-0.250, 0.000, 0.000, 0.000, 0.000, 0.000, -1.000],
    [-0.250, 0.000, 0.000, 0.000, 0.000, 0.000, -1.000],
    [-0.250, 0.000, 0.000, 0.000, 0.000, 0.000, -1.000],
    [-0.250, 0.000, 0.000, 0.000, 0.000, 0.000, -1.000],
    [-0.250, 0.000, 0.000, 0.000, 0.000, 0.000, -1.000],
    [-0.250, 0.000, 0.000, 0.000, 0.000, 0.000, -1.000],
    [-0.250, 0.000, 0.000, 0.000, 0.000, 0.000, -1.000],
    [-0.250, 0.000, 0.000, 0.000, 0.000, 0.000, -1.000],
    [-0.250, 0.000, 0.000, 0.000, 0.000, 0.000, -1.000],
    [-0.250, 0.000, 0.000, 0.000, 0.000, 0.000, -1.000],
    [-0.250, 0.000, 0.000, 0.000, 0.000, 0.000, -1.000],
    [-0.250, 0.000, 0.000, 0.000, 0.000, 0.000, -1.000],
    [-0.250, 0.000, 0.000, 0.000, 0.000, 0.000, -1.000],
    [-0.250, 0.000, 0.000, 0.000, 0.000, 0.000, -1.000],
    [-0.250, 0.000, 0.000, 0.000, 0.000, 0.000, -1.000],
    [-0.250, 0.000, 0.000, 0.000, 0.000, 0.000, -1.000],
    [-0.250, 0.000, 0.000, 0.000, 0.000, 0.000, -1.000],
    [-0.250, 0.000, 0.000, 0.000, 0.000, 0.000, -1.000],
    [-0.250, 0.000, 0.000, 0.000, 0.000, 0.000, -1.000],
    [-0.250, 0.000, 0.000, 0.000, 0.000, 0.000, -1.000],
    [-0.250, 0.000, 0.000, 0.000, 0.000, 0.000, -1.000],
    [-0.250, 0.000, 0.000, 0.000, 0.000, 0.000, -1.000],
    [-0.250, 0.000, 0.000, 0.000, 0.000, 0.000, -1.000],
    [-0.250, 0.000, 0.000, 0.000, 0.000, 0.000, -1.000],
    [-0.250, 0.000, 0.000, 0.000, 0.000, 0.000, -1.000],
    [-0.250, 0.000, 0.000, 0.000, 0.000, 0.000, -1.000],
    [-0.250, 0.000, 0.000, 0.000, 0.000, 0.000, -1.000],
    [-0.250, 0.000, 0.000, 0.000, 0.000, 0.000, -1.000],
    [-0.250, 0.000, 0.000, 0.000, 0.000, 0.000, -1.000],
    [-0.250, 0.000, 0.000, 0.000, 0.000, 0.000, -1.000],
    [-0.250, 0.000, 0.000, 0.000, 0.000, 0.000, -1.000],
    [-0.250, 0.000, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.000, 0.250, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.000, 0.250, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.000, 0.250, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.000, 0.250, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.000, 0.250, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.000, 0.250, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.000, 0.250, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.000, 0.250, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.000, 0.250, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.000, 0.250, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.000, 0.250, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.000, 0.250, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.000, 0.250, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.000, 0.250, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.000, 0.250, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.000, 0.250, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.000, 0.250, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.000, 0.250, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.000, 0.250, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.000, 0.250, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.000, 0.250, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.000, 0.250, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.000, 0.250, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.000, 0.250, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.000, 0.250, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.000, 0.250, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.000, -0.250, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.000, -0.250, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.000, -0.250, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.000, -0.250, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.000, -0.250, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.000, -0.250, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.000, -0.250, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.000, -0.250, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.000, -0.250, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.000, -0.250, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.000, -0.250, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.000, -0.250, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.000, -0.250, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.000, -0.250, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.000, -0.250, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.000, -0.250, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.000, -0.250, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.000, -0.250, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.000, -0.250, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.000, -0.250, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.000, -0.250, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.000, -0.250, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.000, -0.250, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.000, -0.250, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.000, -0.250, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.000, -0.250, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.000, -0.250, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.000, -0.250, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.000, -0.250, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.000, -0.250, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.000, -0.250, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.000, -0.250, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.000, -0.250, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.000, -0.250, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.000, -0.250, 0.000, 0.000, 0.000, 0.000, -1.000],
    [0.000, -0.250, 0.000, 0.000, 0.000, 0.000, -1.000],
]

TEST_JNT_ACTIONS = [
    [0.003, 0.166, 0.021, -2.608, 0.012, 2.925, 0.801, 0.0],
    [0.003, 0.178, 0.02, -2.589, 0.012, 2.919, 0.802, 0.0],
    [0.003, 0.19, 0.02, -2.57, 0.011, 2.914, 0.802, 0.0],
    [0.003, 0.202, 0.019, -2.551, 0.011, 2.91, 0.802, 0.0],
    [0.003, 0.214, 0.019, -2.533, 0.01, 2.906, 0.801, 0.0],
    [0.003, 0.226, 0.019, -2.513, 0.01, 2.902, 0.801, 0.0],
    [0.003, 0.238, 0.018, -2.494, 0.009, 2.896, 0.801, 0.0],
    [0.003, 0.25, 0.018, -2.474, 0.009, 2.889, 0.801, 0.0],
    [0.003, 0.262, 0.018, -2.454, 0.008, 2.881, 0.802, 0.0],
    [0.003, 0.274, 0.017, -2.434, 0.008, 2.872, 0.802, 0.0],
    [0.003, 0.286, 0.017, -2.414, 0.008, 2.863, 0.802, 0.0],
    [0.003, 0.297, 0.016, -2.393, 0.007, 2.854, 0.802, 0.0],
    [0.003, 0.309, 0.016, -2.373, 0.007, 2.845, 0.802, 0.0],
    [0.003, 0.321, 0.016, -2.352, 0.007, 2.836, 0.802, 0.0],
    [0.003, 0.333, 0.016, -2.331, 0.006, 2.826, 0.802, 0.0],
    [0.003, 0.345, 0.015, -2.31, 0.006, 2.817, 0.801, 0.0],
    [0.004, 0.358, 0.015, -2.289, 0.006, 2.807, 0.801, 0.0],
    [0.004, 0.37, 0.015, -2.267, 0.006, 2.798, 0.801, 0.0],
    [0.004, 0.382, 0.015, -2.245, 0.005, 2.788, 0.801, 0.0],
    [0.004, 0.394, 0.014, -2.224, 0.005, 2.778, 0.801, 0.0],
    [0.004, 0.407, 0.014, -2.202, 0.005, 2.768, 0.801, 0.0],
    [0.004, 0.419, 0.014, -2.18, 0.005, 2.758, 0.801, 0.0],
    [0.004, 0.432, 0.014, -2.157, 0.005, 2.748, 0.801, 0.0],
    [0.004, 0.445, 0.014, -2.135, 0.005, 2.738, 0.801, 0.0],
    [0.004, 0.458, 0.013, -2.112, 0.004, 2.728, 0.801, 0.0],
    [0.004, 0.471, 0.013, -2.089, 0.004, 2.718, 0.801, 0.0],
    [0.004, 0.484, 0.013, -2.066, 0.004, 2.707, 0.801, 0.0],
    [0.004, 0.497, 0.013, -2.042, 0.004, 2.697, 0.801, 0.0],
    [0.004, 0.51, 0.013, -2.019, 0.004, 2.686, 0.801, 0.0],
    [0.004, 0.523, 0.013, -1.995, 0.004, 2.676, 0.801, 0.0],
    [0.004, 0.537, 0.012, -1.97, 0.004, 2.665, 0.801, 0.0],
    [0.004, 0.551, 0.012, -1.946, 0.003, 2.655, 0.801, 0.0],
    [0.004, 0.537, 0.012, -1.971, 0.004, 2.666, 0.801, 0.0],
    [0.004, 0.523, 0.012, -1.994, 0.004, 2.674, 0.802, 0.0],
    [0.004, 0.51, 0.013, -2.016, 0.004, 2.677, 0.802, 0.0],
    [0.004, 0.497, 0.013, -2.038, 0.004, 2.678, 0.802, 0.0],
    [0.004, 0.483, 0.013, -2.059, 0.004, 2.678, 0.802, 0.0],
    [0.004, 0.47, 0.013, -2.08, 0.004, 2.681, 0.802, 0.0],
    [0.005, 0.457, 0.012, -2.102, 0.004, 2.686, 0.802, 0.0],
    [0.005, 0.444, 0.012, -2.124, 0.004, 2.693, 0.802, 0.0],
    [0.005, 0.431, 0.012, -2.146, 0.004, 2.703, 0.802, 0.0],
    [0.005, 0.418, 0.013, -2.169, 0.004, 2.713, 0.802, 0.0],
    [0.005, 0.406, 0.013, -2.191, 0.004, 2.724, 0.802, 0.0],
    [0.005, 0.393, 0.013, -2.214, 0.004, 2.736, 0.802, 0.0],
    [0.005, 0.381, 0.013, -2.236, 0.004, 2.748, 0.801, 0.0],
    [0.005, 0.368, 0.013, -2.258, 0.004, 2.759, 0.801, 0.0],
    [0.005, 0.356, 0.013, -2.28, 0.004, 2.771, 0.801, 0.0],
    [0.005, 0.344, 0.013, -2.302, 0.004, 2.782, 0.801, 0.0],
    [0.005, 0.332, 0.014, -2.324, 0.005, 2.794, 0.801, 0.0],
    [0.005, 0.32, 0.014, -2.345, 0.005, 2.805, 0.801, 0.0],
    [0.005, 0.308, 0.014, -2.367, 0.005, 2.816, 0.801, 0.0],
    [0.005, 0.296, 0.014, -2.388, 0.005, 2.827, 0.801, 0.0],
    [0.005, 0.284, 0.015, -2.408, 0.006, 2.838, 0.801, 0.0],
    [0.005, 0.272, 0.015, -2.429, 0.006, 2.848, 0.801, 0.0],
    [0.005, 0.261, 0.015, -2.449, 0.007, 2.857, 0.801, 0.0],
    [0.005, 0.249, 0.016, -2.469, 0.007, 2.867, 0.801, 0.0],
    [0.005, 0.237, 0.016, -2.49, 0.007, 2.876, 0.801, 0.0],
    [0.005, 0.225, 0.016, -2.51, 0.008, 2.885, 0.801, 0.0],
    [0.005, 0.213, 0.017, -2.53, 0.008, 2.894, 0.801, 0.0],
    [0.005, 0.202, 0.017, -2.55, 0.009, 2.903, 0.801, 0.0],
    [0.005, 0.19, 0.017, -2.569, 0.009, 2.911, 0.801, 0.0],
    [0.005, 0.178, 0.018, -2.589, 0.009, 2.919, 0.801, 0.0],
    [0.005, 0.166, 0.018, -2.608, 0.01, 2.927, 0.801, 0.0],
    [0.005, 0.154, 0.019, -2.627, 0.011, 2.934, 0.801, 0.0],
    [0.005, 0.142, 0.019, -2.647, 0.011, 2.942, 0.801, 0.0],
    [0.017, 0.142, 0.019, -2.646, 0.003, 2.942, 0.821, 0.0],
    [0.03, 0.143, 0.018, -2.646, -0.008, 2.942, 0.844, 0.0],
    [0.044, 0.144, 0.016, -2.645, -0.021, 2.944, 0.868, 0.0],
    [0.058, 0.145, 0.013, -2.644, -0.037, 2.947, 0.894, 0.0],
    [0.073, 0.146, 0.009, -2.643, -0.054, 2.949, 0.922, 0.0],
    [0.088, 0.148, 0.005, -2.641, -0.07, 2.95, 0.95, 0.0],
    [0.103, 0.149, 0.001, -2.639, -0.084, 2.95, 0.978, 0.0],
    [0.117, 0.151, -0.001, -2.637, -0.095, 2.949, 1.004, 0.0],
    [0.13, 0.152, -0.002, -2.634, -0.102, 2.947, 1.027, 0.0],
    [0.143, 0.154, -0.001, -2.63, -0.106, 2.944, 1.046, 0.0],
    [0.154, 0.156, 0.001, -2.627, -0.106, 2.942, 1.062, 0.0],
    [0.164, 0.157, 0.004, -2.623, -0.105, 2.94, 1.075, 0.0],
    [0.174, 0.16, 0.007, -2.62, -0.103, 2.938, 1.086, 0.0],
    [0.184, 0.162, 0.01, -2.616, -0.102, 2.936, 1.095, 0.0],
    [0.194, 0.165, 0.014, -2.612, -0.101, 2.934, 1.104, 0.0],
    [0.204, 0.167, 0.016, -2.607, -0.103, 2.932, 1.114, 0.0],
    [0.215, 0.17, 0.017, -2.602, -0.108, 2.93, 1.126, 0.0],
    [0.227, 0.173, 0.018, -2.597, -0.115, 2.927, 1.14, 0.0],
    [0.239, 0.176, 0.017, -2.592, -0.123, 2.925, 1.157, 0.0],
    [0.252, 0.179, 0.015, -2.586, -0.134, 2.922, 1.176, 0.0],
    [0.265, 0.183, 0.013, -2.58, -0.145, 2.918, 1.196, 0.0],
    [0.279, 0.186, 0.011, -2.574, -0.156, 2.915, 1.218, 0.0],
    [0.292, 0.19, 0.009, -2.567, -0.166, 2.911, 1.24, 0.0],
    [0.305, 0.193, 0.007, -2.561, -0.174, 2.908, 1.262, 0.0],
    [0.318, 0.197, 0.006, -2.554, -0.18, 2.904, 1.283, 0.0],
    [0.329, 0.201, 0.006, -2.547, -0.183, 2.9, 1.301, 0.0],
    [0.318, 0.197, 0.007, -2.554, -0.175, 2.904, 1.285, 0.0],
    [0.304, 0.193, 0.009, -2.561, -0.163, 2.907, 1.264, 0.0],
    [0.289, 0.189, 0.015, -2.567, -0.145, 2.909, 1.237, 0.0],
    [0.271, 0.186, 0.023, -2.573, -0.124, 2.91, 1.204, 0.0],
    [0.253, 0.182, 0.032, -2.579, -0.1, 2.909, 1.167, 0.0],
    [0.234, 0.178, 0.04, -2.585, -0.078, 2.91, 1.132, 0.0],
    [0.217, 0.175, 0.047, -2.59, -0.06, 2.91, 1.1, 0.0],
    [0.201, 0.172, 0.053, -2.595, -0.047, 2.912, 1.074, 0.0],
    [0.186, 0.169, 0.055, -2.6, -0.039, 2.915, 1.052, 0.0],
    [0.174, 0.166, 0.055, -2.605, -0.039, 2.918, 1.037, 0.0],
    [0.164, 0.163, 0.051, -2.61, -0.044, 2.92, 1.028, 0.0],
    [0.155, 0.161, 0.046, -2.614, -0.053, 2.923, 1.025, 0.0],
    [0.147, 0.159, 0.039, -2.618, -0.063, 2.925, 1.027, 0.0],
    [0.14, 0.156, 0.032, -2.621, -0.074, 2.926, 1.03, 0.0],
    [0.133, 0.154, 0.025, -2.625, -0.081, 2.928, 1.033, 0.0],
    [0.125, 0.152, 0.02, -2.628, -0.083, 2.929, 1.032, 0.0],
    [0.115, 0.15, 0.016, -2.631, -0.08, 2.93, 1.025, 0.0],
    [0.104, 0.149, 0.016, -2.634, -0.07, 2.932, 1.013, 0.0],
    [0.092, 0.148, 0.017, -2.636, -0.055, 2.933, 0.995, 0.0],
    [0.077, 0.146, 0.021, -2.638, -0.035, 2.934, 0.968, 0.0],
    [0.062, 0.145, 0.026, -2.64, -0.012, 2.934, 0.937, 0.0],
    [0.046, 0.144, 0.032, -2.642, 0.012, 2.934, 0.903, 0.0],
    [0.03, 0.143, 0.037, -2.643, 0.034, 2.934, 0.869, 0.0],
    [0.015, 0.142, 0.042, -2.644, 0.053, 2.933, 0.838, 0.0],
    [0.0, 0.142, 0.045, -2.644, 0.068, 2.933, 0.81, 0.0],
    [-0.013, 0.142, 0.046, -2.645, 0.077, 2.933, 0.785, 0.0],
    [-0.026, 0.141, 0.046, -2.645, 0.081, 2.934, 0.765, 0.0],
    [-0.037, 0.141, 0.043, -2.645, 0.081, 2.935, 0.75, 0.0],
    [-0.048, 0.142, 0.04, -2.645, 0.079, 2.935, 0.737, 0.0],
    [-0.057, 0.142, 0.035, -2.645, 0.074, 2.935, 0.729, 0.0],
    [-0.066, 0.142, 0.03, -2.644, 0.07, 2.935, 0.722, 0.0],
    [-0.076, 0.143, 0.026, -2.643, 0.068, 2.934, 0.716, 0.0],
    [-0.086, 0.143, 0.023, -2.642, 0.069, 2.934, 0.708, 0.0],
    [-0.095, 0.144, 0.02, -2.64, 0.074, 2.933, 0.697, 0.0],
    [-0.107, 0.146, 0.019, -2.638, 0.083, 2.932, 0.681, 0.0],
    [-0.119, 0.147, 0.02, -2.636, 0.096, 2.931, 0.661, 0.0],
]

if __name__ == "__main__":

    # Create dict to hold options that will be passed to env creation call
    options = {}

    # Choose environment and add it to options
    options["env_name"] = "Door"  # choose_environment()
    options["robots"] = "Panda"

    # # If a multi-arm environment has been chosen, choose configuration and appropriate robot(s)
    # if "TwoArm" in options["env_name"]:
    #     # Choose env config and add it to options
    #     options["env_configuration"] = choose_multi_arm_config()

    #     # If chosen configuration was bimanual, the corresponding robot must be Baxter. Else, have user choose robots
    #     if options["env_configuration"] == "bimanual":
    #         options["robots"] = "Baxter"
    #     else:
    #         options["robots"] = []

    #         # Have user choose two robots
    #         print("A multiple single-arm configuration was chosen.\n")

    #         for i in range(2):
    #             print("Please choose Robot {}...\n".format(i))
    #             options["robots"].append(choose_robots(exclude_bimanual=True))

    # # Else, we simply choose a single (single-armed) robot to instantiate in the environment
    # else:
    #     options["robots"] = choose_robots(exclude_bimanual=True)

    # Choose controller
    controller_name = "TEST_IND_JOINT"  # choose_controller()

    # Load the desired controller
    options["controller_configs"] = load_controller_config(default_controller=controller_name)

    # Help message to user
    print()
    print('Press "H" to show the viewer control panel.')

    # initialize the task
    env = suite.make(
        **options,
        has_renderer=True,
        has_offscreen_renderer=False,
        ignore_done=True,
        use_camera_obs=False,
        control_freq=20,
    )
    env.reset()
    env.viewer.set_camera(camera_id=0)

    # Generate path

    # do visualization with renderer
    actual_jnt_trajectories = []

    for act in TEST_JNT_ACTIONS:
        obs, reward, done, _ = env.step(np.array(act))
        actual_jnt_trajectories.append(env.robots[0].recent_qpos.current)
        env.render()

    # Visualize Controller performance
    desired_jnt_trajectories = np.array(TEST_JNT_ACTIONS)
    x_vec = np.arange(len(desired_jnt_trajectories))
    actual_jnt_trajectories = np.array(actual_jnt_trajectories)

    fig = make_subplots(
        rows=7, cols=1, shared_xaxes=True, vertical_spacing=0.02, subplot_titles=[f"Jnt_{i}" for i in range(7)]
    )

    SHOW_LEGEND = [True] + [False] * 6

    for i in range(7):
        fig.add_trace(
            go.Scatter(
                x=x_vec,
                y=desired_jnt_trajectories[:, i],
                mode="lines+markers",
                marker=dict(color="blue", size=5, symbol="square"),
                name="desired",
                legendgroup="desired",
                showlegend=SHOW_LEGEND[i],
            ),
            row=i + 1,
            col=1,
        )
        fig.add_trace(
            go.Scatter(
                x=x_vec,
                y=actual_jnt_trajectories[:, i],
                mode="lines+markers",
                marker=dict(color="red", size=5, symbol="circle"),
                name="actual",
                legendgroup="actual",
                showlegend=SHOW_LEGEND[i],
            ),
            row=i + 1,
            col=1,
        )

    fig.show()
